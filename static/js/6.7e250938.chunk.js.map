{"version":3,"sources":["components/All/SetCard.js","components/All/Home.js","components/All/ProgressBar.js","components/All/RarityCollectionItem.js"],"names":["SetCard","setId","ownedTotal","useSelector","set","inventory","sum","Object","keys","forEach","rarity","setTotal","percentOwned","toFixed","setName","setInfo","name","setCardHeader","className","id","logo","src","alt","title","RarityCollectionItem","Home","useState","showStandard","setShowStandard","useEffect","standardPreference","window","localStorage","getItem","collectionTitle","renderToggle","tabIndex","onKeyDown","e","key","toggleStandard","role","type","checked","onChange","standardEnabled","setItem","standardSets","historicSets","map","path","to","ProgressBar","percent","innerClass","innerRef","useRef","current","style","width","ref","symbol","slice","length"],"mappings":"mMA+DeA,MAxDf,SAAiB,GAAY,IAAVC,EAAK,EAALA,MAKTC,EAAaC,aAAa,YAA2B,IAAZC,EAAG,EAAfC,UAAYD,IACvCE,EAAM,EAKV,OAJIF,GAEAG,OAAOC,KAAKJ,EAAIH,IAAQQ,SAAS,SAAAC,GAAWJ,GAAOF,EAAIH,GAAOS,GAAQR,UAAU,IAE7EI,CACX,IAEMK,EAAWR,aAAa,YAA2B,IAAZC,EAAG,EAAfC,UAAYD,IACrCE,EAAM,EAKV,OAJIF,GAEAG,OAAOC,KAAKJ,EAAIH,IAAQQ,SAAS,SAAAC,GAAWJ,GAAOF,EAAIH,GAAOS,GAAQC,QAAQ,IAE3EL,CACX,IAEMM,GAAiBV,EAAaS,EAAY,KAAKE,QAAQ,GACvDC,EAAUC,IAAQd,GAAOe,KAC3BC,EAAgB,qBAAKC,UAAU,2BAA2BC,GAAG,gBAAe,SAAEL,IAQlF,OANKC,IAAQd,GAAOmB,OAChBH,EAAgB,qBAAKC,UAAU,2BAA2BC,GAAG,gBAAe,SACxE,qBAAKE,IAAKN,IAAQd,GAAOmB,KAAME,IAAKR,EAAS,aAAYA,EAASS,MAAOT,OAK7E,sBAAKI,UAAU,cAAa,UAEvBD,EAGD,sBAAKC,UAAU,+BAA8B,yCAGzC,iCAAOhB,EAAU,MAAKS,EAAQ,KAAIC,EAAY,WAIlD,sBAAKM,UAAU,yBAAwB,UACnC,cAACM,EAAA,EAAoB,CAACvB,MAAOA,EAAOS,OAAO,WAC3C,cAACc,EAAA,EAAoB,CAACvB,MAAOA,EAAOS,OAAO,SAC3C,cAACc,EAAA,EAAoB,CAACvB,MAAOA,EAAOS,OAAO,aAC3C,cAACc,EAAA,EAAoB,CAACvB,MAAOA,EAAOS,OAAO,gBAI3D,E,MC+Cee,UAlGf,WAGI,MAAwCC,oBAAS,GAAK,mBAA/CC,EAAY,KAAEC,EAAe,KAGpCC,qBAAU,WAEN,IAAMC,EAAqBC,OAAOC,aAAaC,QAAQ,gBAGnDL,EADuB,UAAvBE,EAMR,GAAG,IAGH,IAAMI,EAAkBP,EAAe,sBAAwB,sBAGzDQ,EACF,sBAEIhB,GAAG,iBAAiBiB,SAAS,IAC7BC,UAAY,SAAAC,GAAoB,UAAVA,EAAEC,KAAiBC,EAAeb,EAAa,EACrEc,KAAK,WAAW,gBAAed,EAAc,aAAW,uBAAsB,UAE9E,qBAAKR,GAAG,gBAAe,sBAGvB,sBAAKD,UAAU,4BAA4BC,GAAG,2BAA0B,UACpE,uBACIuB,KAAK,WAAW1B,KAAK,iBAAiBG,GAAG,iBAAiBiB,SAAS,KACnEO,SAAUhB,EAAciB,SAAU,kBAAMJ,EAAeb,EAAa,IAExE,uBAAOS,SAAS,UAGpB,qBAAKjB,GAAG,gBAAe,yBAQ/B,SAASqB,EAAeK,GAChBA,GAEAjB,GAAgB,GAChBG,OAAOC,aAAac,QAAQ,eAAgB,WAG5ClB,GAAgB,GAChBG,OAAOC,aAAac,QAAQ,eAAgB,QAEpD,CAyBA,OACI,qCACKX,EAED,sBAAKjB,UAAU,WAAU,UACrB,oBAAIA,UAAU,YAAW,SAAEgB,IAE3B,qBAAKhB,UAAU,cAAa,UAzBvBS,EAAeoB,IAAeC,KAGrBC,KAAK,SAAChD,GACxB,IAAMiD,EAAI,eAAWjD,GAErB,OACI,qBAAKiB,UAAU,eAAc,SACzB,cAAC,IAAI,CAACiC,GAAID,EAAK,SACX,cAAC,EAAO,CAACjD,MAAOA,GAAYA,MAFDA,EAM3C,WAkBR,C,8GCtFemD,MAhBf,SAAqB,GAAwB,IAAvBC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAErBC,EAAWC,mBAOjB,OALA3B,qBAAU,WACN0B,EAASE,QAAQC,MAAMC,MAAK,UAAMN,EAAO,IAE7C,GAAE,CAACA,IAGC,qBAAKnC,UAAU,iBAAgB,SAC3B,qBAAKA,UAAS,yBAAoBoC,GAAcM,IAAML,KAGlE,E,MCgDe/B,IAvDf,SAA8B,GAAoB,IAAlBvB,EAAK,EAALA,MAAOS,EAAM,EAANA,OAM7BR,EAAaC,aAAa,YAA2B,IAAZC,EAAG,EAAfC,UAAYD,IAC3C,OAAIA,EACOA,EAAIH,GAAOS,GAAQR,WAGvB,CACX,IAEMS,EAAWR,aAAa,YAA2B,IAAZC,EAAG,EAAfC,UAAYD,IACzC,GAAIA,EACA,OAAOA,EAAIH,GAAOS,GAAQC,QAClC,IAGMC,GAAiBV,EAAaS,EAAY,KAAKE,QAAQ,GAEzDgD,EAAS5D,EAUb,MAR0B,OAAtBA,EAAM6D,MAAM,EAAG,KACfD,EAAS,OAEQ,IAAjB5D,EAAM8D,QAA6B,MAAb9D,EAAM,KAC5B4D,EAAS,OAII,IAAblD,EACO,6BAIP,sBAAKO,UAAU,QAAQC,GAAG,iBAAgB,UACtC,sBAAKD,UAAU,kBAAiB,UAE5B,sBAAKA,UAAU,aAAY,UACvB,mBAAGA,UAAS,gBAAW2C,EAAM,eAAOnD,EAAM,oBAAmB,QAE5DA,KAGL,qBAAKQ,UAAU,eAAc,SACzB,yCAAUhB,EAAU,cAAMS,EAAQ,aAAKC,EAAY,aAG3D,cAAC,EAAW,CAACyC,QAASzC,EAAc0C,WAAY5C,MAG5D,C","file":"static/js/6.7e250938.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport RarityCollectionItem from './RarityCollectionItem';\r\nimport { setInfo } from '../../data/setInfo'\r\nimport '../../css/SetCard.css';\r\n\r\nfunction SetCard({ setId }) {   \r\n    \r\n    /*\r\n     * Calculate totals from redux state \r\n     */\r\n    const ownedTotal = useSelector( ({ inventory: {set} }) => {\r\n        let sum = 0;\r\n        if (set) {\r\n            // Sum the total cards owned\r\n            Object.keys(set[setId]).forEach( rarity => {sum += set[setId][rarity].ownedTotal} );\r\n        }\r\n        return sum;\r\n    });\r\n\r\n    const setTotal = useSelector( ({ inventory: {set} }) => {\r\n        let sum = 0;\r\n        if (set) {\r\n            // Sum the total cards in the set\r\n            Object.keys(set[setId]).forEach( rarity => {sum += set[setId][rarity].setTotal} );\r\n        }\r\n        return sum;\r\n    });\r\n\r\n    const percentOwned = ((ownedTotal / setTotal) * 100).toFixed(1);\r\n    const setName = setInfo[setId].name;\r\n    let setCardHeader = <div className=\"ui center aligned header\" id=\"setCardHeader\">{setName}</div>;\r\n\r\n    if ( setInfo[setId].logo ) {\r\n        setCardHeader = <div className=\"ui center aligned header\" id=\"setCardHeader\" >\r\n            <img src={setInfo[setId].logo} alt={setName} aria-label={setName} title={setName}/>\r\n            </div>;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"mtgaSetCard\">\r\n            {/* The specific card set */}\r\n            {setCardHeader}\r\n\r\n            {/* Owned cards from this set */}\r\n            <div className=\"ui center aligned sub header\">\r\n                Set Progress:\r\n                &nbsp; &nbsp; &nbsp;\r\n                <span>{ownedTotal} / {setTotal} ({percentOwned}%)</span>\r\n            </div>\r\n\r\n            {/* Owned cards by rarity */}\r\n            <div className=\"ui middle aligned list\">\r\n                <RarityCollectionItem setId={setId} rarity=\"mythic\" />                    \r\n                <RarityCollectionItem setId={setId} rarity=\"rare\" />\r\n                <RarityCollectionItem setId={setId} rarity=\"uncommon\" />\r\n                <RarityCollectionItem setId={setId} rarity=\"common\"/>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SetCard;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SetCard from './SetCard';\r\nimport { standardSets, historicSets } from '../../data/setInfo';\r\nimport '../../css/Home.css';\r\n\r\n/**\r\n * Home Page Component - Displays current card sets and other general info/options\r\n */\r\nfunction Home() {\r\n\r\n    // State determines whether to show standard or historic sets\r\n    const [showStandard, setShowStandard] = useState(true);\r\n\r\n    // Use local storage to decide whether to show standard or historic sets\r\n    useEffect(() => {\r\n        // Get value from local storage\r\n        const standardPreference = window.localStorage.getItem(\"showStandard\");\r\n\r\n        if (standardPreference === \"false\") {\r\n            setShowStandard(false);\r\n        }\r\n        else {\r\n            setShowStandard(true);\r\n        }\r\n    }, []);\r\n\r\n    // Use shown sets to determine title\r\n    const collectionTitle = showStandard ? \"Standard Collection\" : \"Historic Collection\";\r\n\r\n    // Render the standard/historic toggle\r\n    const renderToggle = (\r\n        <div\r\n            // Accessibility\r\n            id=\"standardToggle\" tabIndex=\"0\"\r\n            onKeyDown={ e => {if (e.key === \"Enter\") toggleStandard(showStandard)} }\r\n            role=\"checkbox\" aria-checked={!showStandard} aria-label=\"Standard Mode Toggle\"\r\n        >\r\n            <div id=\"standardLabel\">Standard</div>\r\n\r\n            {/* Standard/Historic Toggle */}\r\n            <div className=\"ui fitted toggle checkbox\" id=\"labelColorStandardToggle\">\r\n                <input \r\n                    type=\"checkbox\" name=\"StandardToggle\" id=\"StandardToggle\" tabIndex=\"-1\"\r\n                    checked={!showStandard} onChange={() => toggleStandard(showStandard)}\r\n                />\r\n                <label tabIndex=\"-1\"></label>\r\n            </div>\r\n\r\n            <div id=\"historicLabel\">Historic</div>\r\n        </div>\r\n    );\r\n\r\n    /**\r\n     * Toggles between standard and historic modes\r\n     * @param {boolean} standardEnabled True when standard is enabled\r\n     */\r\n    function toggleStandard(standardEnabled) {\r\n        if (standardEnabled) {\r\n\r\n            setShowStandard(false);\r\n            window.localStorage.setItem(\"showStandard\", \"false\");\r\n        } else {\r\n\r\n            setShowStandard(true);\r\n            window.localStorage.setItem(\"showStandard\", \"true\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Outputs JSX for each of the card sets to be displayed\r\n     */\r\n    function renderSets() {\r\n\r\n        const sets = showStandard ? standardSets : historicSets;\r\n        \r\n        // Create each card set Component based on 'sets' input\r\n        const setCards = sets.map( (setId) => {\r\n            const path = `/set/${setId}`;\r\n\r\n            return (\r\n                <div className=\"ui link card\" key={setId}>\r\n                    <Link to={path}>\r\n                        <SetCard setId={setId} key={setId}/>\r\n                    </Link>\r\n                </div>\r\n            );\r\n        });\r\n        \r\n        return (setCards);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {renderToggle}\r\n\r\n            <div className=\"homePage\">\r\n                <h1 className=\"homeTitle\">{collectionTitle}</h1>\r\n\r\n                <div className='cardSetList'>\r\n                    {renderSets()}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport '../../css/ProgressBar.css'\r\n\r\nfunction ProgressBar({percent, innerClass}) {\r\n    // Make a reference to the inner portion of the progress bar\r\n    const innerRef = useRef();\r\n\r\n    useEffect(()=> {\r\n        innerRef.current.style.width = `${percent}%`;\r\n\r\n    },[percent])\r\n\r\n    return (\r\n        <div className=\"progress-outer\">\r\n            <div className={`progress-inner ${innerClass}`} ref ={innerRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ProgressBar from './ProgressBar';\r\nimport '../../css/RarityCollectionItem.css';\r\n\r\n/**\r\n * Component that contains details about how many cards are owned from a specific set of a specific rarity\r\n * @param {*} setId\r\n * @param {*} rarity\r\n */\r\nfunction RarityCollectionItem({ setId, rarity }) {\r\n\r\n    /*\r\n     * Extract multiple values from redux state\r\n     * - Multiple calls to useSelector used to avoid needing to memoize redux state\r\n     */\r\n    const ownedTotal = useSelector( ({ inventory: {set} }) => { // Destructure set from state.inventory\r\n        if (set)\r\n            return set[setId][rarity].ownedTotal;\r\n        \r\n        // else no cards found\r\n        return 0;\r\n    });\r\n\r\n    const setTotal = useSelector( ({ inventory: {set} }) => { // Destructure set from state.inventory\r\n        if (set)\r\n            return set[setId][rarity].setTotal;\r\n    });\r\n\r\n    // Calculate percent of cards owned (to one decimal) from specified set of specified rarity\r\n    const percentOwned = ((ownedTotal / setTotal) * 100).toFixed(1);\r\n\r\n    let symbol = setId;\r\n    // Replace some set symbols with another (e.g. give all Historic Anthologies the HA1 symbol)\r\n    if (setId.slice(0, 2) === 'ha') {\r\n        symbol = 'ha1'\r\n    }\r\n    if (setId.length === 4 && setId[0] === 'y') {\r\n        symbol = 'y22'\r\n    }\r\n\r\n    // If there are no cards of this rarity, don't show a progress bar for this rarity\r\n    if (setTotal === 0) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div className=\"item \" id=\"collectionItem\" >\r\n            <div className=\"rarityContainer\">\r\n\r\n                <div className=\"rarityText\">\r\n                    <i className={`ss ss-${symbol} ss-${rarity} ss-fw mtgIcon`}/>\r\n                    &nbsp; {/* Force a non-CSS space between icon and text */}\r\n                    {rarity}\r\n                </div>\r\n\r\n                <div className=\"rarityNumber\">\r\n                    <span>{`${ownedTotal} / ${setTotal} (${percentOwned}%)`}</span>\r\n                </div>\r\n            </div>\r\n            <ProgressBar percent={percentOwned} innerClass={rarity}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RarityCollectionItem;"],"sourceRoot":""}