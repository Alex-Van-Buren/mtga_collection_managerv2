{"version":3,"sources":["images/arena/options.png","images/arena/Account.png","images/arena/detailedLogs.png","components/Templates/Accordion.js","components/Errors/NoInventoryFoundHelp.js","components/All/Help.js"],"names":["Accordion","props","startState","open","undefined","useState","setOpen","panelRef","useRef","elements","React","Children","toArray","children","useEffect","current","style","maxHeight","scrollHeight","iconClass","expandButton","className","aria-expanded","aria-label","firstElementChildren","firstElement","cloneElement","collapsableStuff","ref","slice","onClick","renderPathButton","text","setText","path","tabIndex","onKeyDown","e","makeKeyboardClickable","stopPropagation","navigator","clipboard","writeText","then","NoInventoryFound","errorTop","invalidFile","help","windowsButton","setWindowsButton","macButton","setMacButton","wRef","mRef","helpClass","Help","openSection","URLSearchParams","useLocation","search","get","openAccordion","findLogfile","detailedLogs","usingDraftCalculator","FAQ","bugs","hasOwnProperty","renderBugs","map","bug","index","renderFAQs","question","answer","id","src","optionsImg","alt","title","accountImg","detailedLogsImg","href","target","rel"],"mappings":"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","file":"static/js/7.6f1ff11d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/options.59b13fd6.png\";","export default __webpack_public_path__ + \"static/media/Account.44beb203.png\";","export default __webpack_public_path__ + \"static/media/detailedLogs.bc69eedb.png\";","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport '../../css/Accordion.css';\r\n/**\r\n * Make a collapsible section with a right floated button to expand/collapse the section. \r\n * To Use just wrap the elements with the Accordion Element. The first element will be the title element with a \r\n * button on the right and will always be visible. The remaining elements will be expandable. Ex: \r\n * @example\r\n * <Accordion> \r\n *      <div> title </div> \r\n *      <div> content </div> \r\n *      <div> more content </div> \r\n * </Accordion> \r\n * @param {*} props Grabs the children of Accordion\r\n * @returns Collapsible section\r\n */\r\nfunction Accordion(props) {\r\n    let startState = props.open;\r\n    if (props.open === undefined) {\r\n        startState = false;\r\n    }\r\n    const [open, setOpen] = useState(startState);\r\n    const panelRef = useRef();\r\n\r\n    // Copy All the children elements and put into an array\r\n    const elements = React.Children.toArray(props.children);\r\n    \r\n    // Change the height of the collapsable panel based on open state\r\n    useEffect(() => {\r\n        if (open) {\r\n            panelRef.current.style.maxHeight = panelRef.current.scrollHeight +\"px\";\r\n        } else {\r\n            panelRef.current.style.maxHeight = 0;\r\n        }\r\n    },[open]);    \r\n\r\n    // Make a button to expand/collapse the accordion to put in the first child element\r\n    const iconClass = open ? \"minus icon\" : \"plus icon\";\r\n\r\n    const expandButton = ( \r\n        <button className=\"expandButton\" key=\"expandButton\" \r\n        aria-expanded={open} aria-label=\"Expand/Collapse Section\">\r\n            <i className={iconClass}></i>\r\n        </button>\r\n    )\r\n\r\n    // Put the expand button as a clild of the first element\r\n    const firstElementChildren = [elements[0].props.children, expandButton];\r\n    const firstElement = React.cloneElement(elements[0], {}, firstElementChildren );\r\n\r\n    // Put the rest of the elements into a div that will show/hide based on open state\r\n    const collapsableStuff = (\r\n        <div className=\"panel\" ref={panelRef}>\r\n            {elements.slice(1)}\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <span onClick={()=> setOpen(!open)}>\r\n            {firstElement}\r\n            {collapsableStuff} \r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Accordion;","import { useState, useRef } from 'react';\r\n\r\nimport makeKeyboardClickable from '../../hooks/makeKeyboardClickable';\r\n\r\n/**\r\n * Button to copy path to keyboard\r\n * @param {string} text Button text\r\n * @param {function} setText Set button text function\r\n * @param {ref} ref Button ref\r\n * @param {string} path Path to copy\r\n */\r\nfunction renderPathButton(text, setText, ref, path) {\r\n    return (\r\n        <button className=\"errorButton\" tabIndex=\"0\" ref={ref} onKeyDown={e => makeKeyboardClickable(e, ref)}\r\n            onClick={(e) => {\r\n                e.stopPropagation();\r\n\r\n                // Write path to clipboard\r\n                navigator.clipboard.writeText(path).then(() => {\r\n\r\n                    // Update button text without state\r\n                    setText(\"Copied!\");\r\n                });\r\n            }}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\n/**\r\n * Return JSX for NoInventoryFound or InvalidFile Errors.\r\n * @param {boolean} props.invalidFile (Optional) Parameter that allows most of this code to be reused for the InvalidFile error.\r\n * Value of true will return InvalidFile instead of NoInventoryFound (very similar errors).\r\n * @returns Error JSX\r\n */\r\nexport default function NoInventoryFound({invalidFile=false, help=false}) {\r\n    const [windowsButton, setWindowsButton] = useState(\"Copy Path\");\r\n    const [macButton, setMacButton] = useState(\"Copy Path\");\r\n\r\n    const wRef = useRef();\r\n    const mRef = useRef();\r\n\r\n    const windowsPath = \"%USERPROFILE%\\\\AppData\\\\LocalLow\\\\Wizards Of The Coast\\\\MTGA\";\r\n    const macPath = \"~/Library/Logs/Wizards Of The Coast/MTGA\";\r\n\r\n    // Choose error header to show\r\n    let errorTop;\r\n    let helpClass = \"\";\r\n    \r\n    if (help) {\r\n        errorTop = null;\r\n        helpClass = \"helpErrorText\";\r\n    \r\n    } else if (invalidFile) {\r\n        errorTop = (<>\r\n            <br/>\r\n            <h1 className=\"errorTitle\">File not recognized!</h1>\r\n            <br/>\r\n        </>);\r\n    } else {\r\n        errorTop = (<>\r\n            <br/>\r\n            <h1 className=\"errorTitle\">No inventory Data found!</h1>\r\n            <div className=\"errorSubtitle\">File must be a Player Log with <strong>Detailed Logs</strong> enabled.</div>\r\n    \r\n            <div className=\"errorSublist\">\r\n                <div>\r\n                    Detailed Logs can be found in MTG Arena under:\r\n                    <div className=\"errorText\">Options ➞ Account ➞ Detailed Logs</div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </>);\r\n    }\r\n\r\n    return (\r\n        <div className={`errorMessage ${helpClass}`}>\r\n\r\n            {errorTop}\r\n\r\n            <div>\r\n                Use your File Explorer (Windows) or Finder App (Mac) to navigate to your log files using these filepaths, \r\n                or click \"Copy Path\" button and paste the link into your File Explorer or Finder App.\r\n            </div>\r\n\r\n            <br/>\r\n            \r\n            <div className=\"errorSublist\">\r\n                <div>\r\n                    Windows\r\n                    <div className=\"errorText\">Default filepath for \".log\" files:</div>\r\n                    <div className=\"errorText\">C:\\Users\\<span className=\"yourUserName\">(Your User Name)</span>\\AppData\\LocalLow\\Wizards Of The Coast\\MTGA</div>\r\n                </div>\r\n\r\n                <div>{renderPathButton(windowsButton, setWindowsButton, wRef, windowsPath)}</div>\r\n\r\n            </div>\r\n            <br />\r\n            <div className=\"errorSublist\">\r\n                <div>\r\n                    Mac\r\n                    <div className=\"errorText\">Default filepath for \".log\" files:</div>\r\n                    <div className=\"errorText\">Macintosh HD/Users/<span className=\"yourUserName\">(Your User Name)</span>/Library/Logs/Wizards Of The Coast/MTGA</div>\r\n\r\n                </div>\r\n\r\n                <div>{renderPathButton(macButton, setMacButton, mRef, macPath)}</div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport optionsImg from '../../images/arena/options.png';\r\nimport accountImg from '../../images/arena/Account.png';\r\nimport detailedLogsImg from '../../images/arena/detailedLogs.png';\r\nimport Accordion from '../Templates/Accordion';\r\nimport NoInventoryFoundHelp from '../Errors/NoInventoryFoundHelp';\r\nimport '../../css/Help.css';\r\n\r\n/**\r\n * The help page.\r\n */\r\nfunction Help() {\r\n    // Gets the query string from the URL\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const openSection = query.get(\"openSection\");\r\n\r\n    // Object that has the open props for all of the Accordions\r\n    let openAccordion = {\r\n        findLogfile: false, detailedLogs: false, usingDraftCalculator: false, FAQ: false, bugs: false\r\n    };\r\n\r\n    // Set openSection of openAccordion to true\r\n    if (openAccordion.hasOwnProperty(openSection)){\r\n        openAccordion[openSection] = true;\r\n    }\r\n\r\n    // Frequently asked questions array of {question: \"\", answer: \"\"}\r\n    const FAQs = [\r\n        {\r\n            question: \"Uploading my log file doesn't do anything, why?\",\r\n            answer: \"The developers removed the info from log files that we used to extract which cards you own. We don't \" +\r\n            \"know if or when they'll put it back.\"\r\n        },\r\n        {\r\n            question: 'What does uploading my \"log file\" do?',\r\n            answer: \"Your log file contains the IDs of all the cards you own, as well as your vault progress, gold, gems, \" +\r\n            \"wildcards, etc. Collection Manager grabs this information and shows you what cards you own, how many drafts or\" +\r\n            \" packs you need to complete each set, your current vault progress, and more.\"\r\n        },\r\n        {\r\n            question:'What does \"Collection Manager\" do with my log file/info?',\r\n            answer: \"When a user uploads their log file, they are allowing their own internet browser to analyze it. \" + \r\n            \"We do NOT keep your log file or information.\"\r\n        },\r\n        {\r\n            question:\"How do I upload my log file on mobile?\",\r\n            answer: 'While \"Collection Manager\" can be used on mobile, the mobile application for MTG Arena does not seem ' + \r\n            'to generate a log file that \"Collection Manager\" can parse. If you wish, you could copy a log file to your phone' +\r\n            ' from the desktop application.'\r\n        },\r\n        {\r\n            question:\"How many packs/drafts do I need to open/do to get all the cards in a set?\",\r\n            answer:\"On each set's page, there is a tab to calculate how many additional packs you need to complete the rares or \" +\r\n            \"mythics of a set as well as a tab to calculate how many drafts you will need to complete the rares or mythics of \" +\r\n            \"a set.\"\r\n        }\r\n    ];\r\n\r\n    // Known Bugs\r\n    const bugs = [\r\n        {\r\n            text: \"Resizing the window can prevent lists of images from loading. Scrolling through the list of images \" +\r\n            \"may fix the problem. If this doesn't work, reloading will fix the issue.\"\r\n        },\r\n        {\r\n            text: \"Log files update gold/gems/wildcards, but nothing else since Wizards of the Coast removed inventory \" + \r\n            \"info from log files.\"\r\n        }\r\n    ];\r\n\r\n    // Map the Bugs to JSX\r\n    const renderBugs = bugs.map((bug, index) => {\r\n        return <li key={`bug${index}`}>{bug.text}</li>;\r\n    });\r\n    \r\n    // Map the FAQs to JSX\r\n    const renderFAQs = FAQs.map((FAQ, index) => {\r\n        return (\r\n            <li key={index}>{FAQ.question}\r\n                <ul>\r\n                    <li>{FAQ.answer}</li>\r\n                </ul>\r\n            </li>            \r\n        );\r\n    });\r\n\r\n    return (\r\n    <>\r\n    <h1 className='helpTitle'>Help</h1>\r\n    <div className=' ui container helpPage'>\r\n       \r\n        <div className='findLogFile' id='findLogFile'>\r\n            <Accordion open={openAccordion.findLogfile}>\r\n                <h2>Finding Your Log file </h2>\r\n                <p>Your log file is an automatically generated file created by MTG Arena named \"Player.log\". It is typically \r\n                    found at one of the following locations:\r\n                </p>\r\n                <NoInventoryFoundHelp help={true}/>\r\n                <p>Some folders may be hidden and you will need to unhide them in order to access them.</p>\r\n            </Accordion>\r\n        </div>\r\n\r\n        <div className=\"detailedLogs\" id=\"detailedLogs\">\r\n            <Accordion open={openAccordion.detailedLogs}>\r\n                <h2>Enabling Detailed Logs</h2>\r\n                <p>In order for this application to work properly, detailed logs need to enabled in MTG Arena. \r\n                This can be found at:   \r\n                </p>\r\n                <p>Options ➞ Account ➞ Detailed Logs</p>\r\n                <div className=\"detailedLogImages\">\r\n                    <img src={optionsImg} alt=\"Find Options\" title=\"Find Options\" aria-label=\"Find Options\" />\r\n                    <img src={accountImg} alt=\"Find Account\" title=\"Find Account\" aria-label=\"Find Account\" />\r\n                    <img src={detailedLogsImg} alt=\"Enable Detailed Options\" title=\"Enable Detailed Options\" aria-label=\"Enable Detailed Options\"/>\r\n                </div>\r\n            </Accordion>\r\n        </div>\r\n\r\n        <div className=\"usingDraftCalculator\" id=\"usingDraftCalculator\">\r\n            <Accordion open={openAccordion.usingDraftCalculator}>\r\n                <h2>How to Use the Draft Calculator</h2>\r\n                <p>The draft calculator (located under the drafts tab on each set's page) calculates how many drafts it will take to complete a \r\n                    user's rare or mythic collection for that particular set. It uses a method where the user takes advantage of the duplicate protection\r\n                    in Arena and waits until they are done drafting to open their packs. To use:\r\n                </p>\r\n                <ol>\r\n                    <li>Choose your preferred draft type (Quick, Premier, Traditional).</li>\r\n                    <li>Input your match win rate.\r\n                        <ul>\r\n                            <li>This is the percentage of time you win a given match.</li>\r\n                            <li>For traditional best-of-three make sure the win rate is for the match and not individual games within a match.</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>Input your average number of new cards picked for both rares and mythics.\r\n                        <ul>\r\n                            <li>This is how many new cards get added to your collection when you are picking the cards to play in draft. When you have few rares/mythics \r\n                                this number may be higher but as your collection grows it may go down. An average value should be used.\r\n                            </li>\r\n                            <li>Wait to open your reward packs until you are done drafting. This takes advantage of duplicate protection and keeps this number higher.</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>When the drafts needed hits 0, it's time to open your packs!\r\n                        <ul>\r\n                            <li>For most users, completing rares is the primary goal, so open your packs when the drafts needed for rares hits 0.</li>\r\n                            <li>If your goal is to complete mythics, only open your packs when the drafts needed for mythics hits 0.</li>\r\n                        </ul>\r\n                    </li>\r\n                </ol>\r\n            </Accordion>\r\n        </div>\r\n\r\n        <div className=\"FAQ\" id=\"FAQ\">\r\n            <Accordion open={openAccordion.FAQ}>\r\n                <h2>FAQ's</h2>\r\n                <ol className=\"FAQList\">\r\n                    {renderFAQs}\r\n                </ol>\r\n            </Accordion>\r\n        </div>\r\n\r\n        <div className=\"FAQ\">\r\n            <Accordion open={openAccordion.bugs}>\r\n                <h2>Known Bugs</h2>\r\n                <ol className=\"FAQList\">\r\n                    {renderBugs}\r\n                </ol>\r\n            </Accordion>\r\n        </div>\r\n\r\n        <div className=\"contact\" id=\"contact\">\r\n            <h2>Contact Us</h2>\r\n            <div id=\"contact_discord\">\r\n                <p>Comments, questions, or suggestions? Contact us on Discord or Reddit:</p>\r\n                \r\n                <div id=\"contactLinks\">\r\n                    {/* Discord Link */}\r\n                    <a href=\"https://discord.gg/H2cTG8nekF\" target=\"_blank\" rel=\"noreferrer\">Join the Discord</a>\r\n\r\n                    {/* Reddit Link */}\r\n                    <a href=\"https://reddit.com/r/CollectionManager/\" target=\"_blank\" rel=\"noreferrer\">Join the Subreddit</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Help;"],"sourceRoot":""}